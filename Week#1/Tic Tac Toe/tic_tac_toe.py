# -*- coding: utf-8 -*-
"""Tic_Tac_Toe.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PXK7oiXVqkY3SmHOF40JqxQcFBmprrsp

<a href="https://www.zero-grad.com/">
         <img alt="Zero Grad" src="https://lh3.googleusercontent.com/oEMY-qk_B2HW_Fponz1a3u1fLfo3NpO0VFjQKnVW8fH0v93NAWala5Kgp0nN2ubiyZdEMpwhv3Ynv7bXsB0RZ28YfEd_ZlRum75OHEu0-z7XwHfcD3sin7_SORLzg1gz52MsxD3b1WbxQWX1RdR4HP3jpbJTOuCiddl92UBcQH_x-Llx7_XuZuwb9ekN9vYnKsw6U1yL2df4IVrJEDySttzab9qlHvMO7sSekgS64jPVAmATjqXqlvrwM026dhrad-7nX-hfr2uKlUGPuo9xKzVo4EhbUP1-pKBQNPNHO6P0KcReg3NxbtKmWXRyg9LPX0xO-wwXWt9GhCcPXFV_BoY5eQXabCjR3mlr9SO01VgWplas-XF4337_JOm-bVkiaQjQca_N4Gg0hy26TvIGRnHEMIPSgudYPqhMnatoN4xAC715rP82r1svC0_qadXMZHu6D40YqWnY9ZE-iujr2p1_CetxmG-uY94UATy7o-SnxuPchG4QfZkiUgRMr8xNg86bQMuBxbCS_lOyVMwfqwbt2IunlDcZ8yyN_3SJFzFHuFOOjQolgGQrytI0mP1oTwba7je0RtBtCuTck1UCMMsZvMnJhCtWgMmuLoYTkSCzxMXbz0T3L2AClDouA_3dwM7z1gdm8Gq4v06T1KWFUs1adGNH5fuj-pUHEfW4drzzXgolPH5SehqhaNsqdMttCPUzNPIIEjwfULyQi7nlP-w-qydK82mdhdmjQhrprfoGtsPckJkI1Tur60uZI7nLkES5cE3tQrGualSNArRkkU8KN4tStZ0CkmqZNkAlMbfAJSYBD7tDxhGSg922AdLevSLJMTUyg6KuHoY30r7zH1Z8fE0R8aFZL2LJl54OU_tkXEdlFlSnZTOdB-PVTj-yagpt99SetLnQIX5SS_Vxc0BNPKjUZG0oEHYbIxkbZN1O7Rg78xe-thytngS0byfuaeP2X4NYjg29FIffnn72bAUs9Ii0N2mOpABLg1uQMN4MyAa1Mbd_=w1300-h200-no?authuser=1" >
      </a>

# Tic Tac Toe Project Description

**`(1) Create Empty board (3x3):`**

  `1  2  3`

  `4 5 6`

  `7 8 9`

 **`(2) Show Board`**

 **`(3) Set Players Randomly ('X', 'O')`**

 **`(4) Take Input from Player`**

 **`(5) Check Full Board >> Draw`**

 **`(6) Check if Someone wins >> Finish`**

# Template

## Empty Board
"""

def create_empty_board():
  board=[[1,2,3]
         ,[4,5,6]
         ,[7,8,9]]
  for row in board:
    for element in row:
      print(element, end='\t')
    print('\n')

create_empty_board()

"""## Show Board"""

def show_board(board):
  for row in board:
    for element in row:
      print(element, end='\t')
    print('\n')

board = [[1,2,3],[4,'X',6],[7,8,9]]
show_board(board)

"""## Set Players"""

import random
def set_players():
  players = ['X', 'O']
  random.shuffle(players)
  return players[0], players[1]

set_players()

"""## Take Input"""

def take_input(board, player):

  player_input = input('Please Enter a number between 1,9, and make sure it is empty ')
  if player_input == '1' and board[0][0].isdigit():
      board[0][0] = player
  elif player_input == '2' and board[0][1].isdigit():
      board[0][1] = player
  elif player_input == '3' and board[0][2].isdigit():
      board[0][2] = player
  elif player_input == '4' and board[1][0].isdigit():
      board[1][0] = player
  elif player_input == '5' and board[1][1].isdigit():
      board[1][1] = player
  elif player_input == '6' and board[1][2].isdigit():
      board[1][2] = player
  elif player_input == '7' and board[2][0].isdigit():
      board[2][0] = player
  elif player_input == '8' and board[2][1].isdigit():
      board[2][1] = player
  elif player_input == '9' and board[2][2].isdigit():
      board[2][2] = player
  else:
      print('Invalid Input try again')


  show_board(board)

board = [['1','2','3'],['4','X','6'],['7','8','9']]
player ='O'
player_input = '8'
take_input(board, player)

"""## Check Full Board"""

def check_full_board(board):
  for row in board:
    for element in row:
      if element.isdigit():
        return False
  return True

board = [['o','x','x'],['o','X','o'],['x','o','x']]
check_full_board(board)

board = [['o','x','x'],['o','X','o'],['4','o','x']]
check_full_board(board)

"""## Check Win

"""

def check_win(board):
    return board[0][0] == board[0][1] == board[0][2] or \
         board[1][0] == board[1][1] == board[1][2] or \
         board[2][0] == board[2][1] == board[2][2] or \
         board[0][0] == board[1][0] == board[2][0] or \
         board[0][1] == board[1][1] == board[2][1] or \
         board[0][2] == board[1][2] == board[2][2] or \
         board[0][0] == board[1][1] == board[2][2] or \
         board[0][2] == board[1][1] == board[2][0]

board = [['x','x','o'],['o','x','x'],['x','o','x']]
show_board(board)
check_win(board)

board = [['o','x','o'],['o','o','x'],['x','o','x']]
show_board(board)
check_win(board)

"""## Let's Play"""

def play():
    player1, player2 = set_players()
    print("Player 1:", player1)
    print("Player 2:", player2, '\n')

    board = [['1','2','3'], ['4','5','6'], ['7','8','9']]
    show_board(board)

    for _ in range(9):
        for player in [player1, player2]:
            print(f"{player}'s turn")
            take_input(board, player)

            if check_win(board):
                print(f"{player} wins!")
                return
            if check_full_board(board):
                print("Game finished. It's a draw!")
                return

play()


# -*- coding: utf-8 -*-
"""COVID-19.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vAhtFLbBSjhhnz5jQnDxFF0rQLqm7rKo
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px
import plotly.graph_objects as go
from plotly.subplots import make_subplots
from dateutil.relativedelta import relativedelta
from datetime import datetime
import warnings
warnings.filterwarnings('ignore')

df = pd.read_csv('https://srhdpeuwpubsa.blob.core.windows.net/whdh/COVID/WHO-COVID-19-global-daily-data.csv')
df.head()

df.info()

pd.options.display.float_format = '{:,.2f}'.format
df.describe()

df.duplicated().sum()

df.isnull().sum()

round(df.isna().mean() * 100 ,2)

df.columns = df.columns.str.lower()

df.sample()

#df.drop('country_code',axis=1,inplace=True)

df.fillna(0,inplace=True)

round(df.isna().mean() * 100 ,2)

df['date_reported'] = pd.to_datetime(df['date_reported'], format='%Y-%m-%d')

df.info()

relativedelta(df.date_reported.max(), df.date_reported.min())

plt.figure(figsize=(12,6))
sns.lineplot(x='date_reported',y='cumulative_cases',data=df[df.country == "Japan"])
plt.title('Cumulative Cases Over Time')
plt.show()

px.line(df[df.country == "Japan"], x='date_reported', y='cumulative_cases', title='Cumulative Cases Over Time')

df['year'] = df.date_reported.dt.year
df['month'] = df.date_reported.dt.month

# For the next visualization we need the country code to be iso3 for example Egypt -> EGY not EG

#!pip install pycountry
import pycountry

def get_iso3(country_name):
    try:
        return pycountry.countries.lookup(country_name).alpha_3
    except:
        return None

df['country_code'] = df['country'].apply(get_iso3)

px.choropleth(df, locations="country_code", animation_frame="year",  hover_name="country", color="cumulative_cases")

df_2024 = df[df['year'] == 2024]
df_top10 = (
    df_2024.groupby('country')['cumulative_cases'].max().sort_values(ascending=False).head(10))
plt.figure(figsize=(12,6))
sns.barplot(
    y=df_top10.index,
    x=df_top10.values,
    palette="viridis"
)
plt.title("Top 10 Countries by Cumulative COVID-19 Cases in 2024")
plt.xlabel("Cumulative Cases")
plt.ylabel("Country")
plt.show()

df_2024 = df[df['year'] == 2024]
df_least10 = (
    df_2024.groupby('country')['cumulative_cases'].max().sort_values(ascending=True).head(10))
plt.figure(figsize=(12,6))
sns.barplot(
    y=df_least10.index,
    x=df_least10.values,
    palette="viridis"
)
plt.title("Top 10 Countries by Cumulative COVID-19 Cases in 2024")
plt.xlabel("Cumulative Cases")
plt.ylabel("Country")
plt.show()

plt.figure(figsize=(12,6))
sns.lineplot(x='month', y='new_cases', hue ='year', data=df, palette='Set1')

df['month_year'] = df.date_reported.dt.to_period('M').astype(str)

px.histogram(df, x='month_year', y='cumulative_cases', color='year', title='New Cases Over Time')

def cumulative_cases_country(df,country,Xaxis):
    df_country = df[df['country']==country]
    fig = px.histogram(df_country, x=Xaxis, y='cumulative_cases', color='year', title=f'cumulative Cases Over Time in {country}')
    fig.show()

def cumulative_deaths_country(df,country,Xaxis):
    df_country = df[df['country']==country]
    fig = px.histogram(df_country, x=Xaxis, y='cumulative_deaths', color='year', title=f'cumulative deaths Over Time in {country}')
    fig.show()

cumulative_cases_country(df,'Japan','month_year')

px.line(df[df.country == "Japan"], x='date_reported', y='cumulative_deaths', title='Cumulative deaths Over Time')

df[df['new_cases'] < 0]

season_map = {
    12: "Winter", 1: "Winter", 2: "Winter",
    3: "Spring", 4: "Spring", 5: "Spring",
    6: "Summer", 7: "Summer", 8: "Summer",
    9: "Autumn", 10: "Autumn", 11: "Autumn"
}

df['season'] = df['month'].map(season_map)

cumulative_deaths_country(df,'Japan','season')

cumulative_cases_country(df,'Japan','season')

df['cured']=df['cumulative_cases']-df['cumulative_deaths']

px.histogram(df, x=df['month_year'], y='cured', color='year')

df_season = (df.groupby(['who_region','season'])[['new_cases','new_deaths']].sum().reset_index())
fig1 = px.bar(df_season, x="season", y="new_cases", color="who_region",title="Total New Cases per Season by Region", barmode="group")
fig1.show()

fig2 = px.bar(df_season, x="season", y="new_deaths", color="who_region",title="Total Deaths per Season by Region", barmode="group")
fig2.show()

"""# ðŸ“Š COVID-19 Insights (2024)

## Overall Trends
- Cases and deaths keep increasing over time, with peaks in some countries like Japan.
- Some negative `new_cases` or `new_deaths` values are due to data corrections.

## Top Countries
- A few countries (USA, India, Brazil) have the most cases.
- Small countries or islands report the lowest numbers.

## Geography & Seasons
- Most cases are in Americas, Europe, and parts of Asia.
- Winter and Spring have higher cases and deaths than Summer and Autumn.

## Estimated Recoveries
- Roughly calculated as cumulative cases minus deaths.
- Recoveries are increasing, but not official data.

"""